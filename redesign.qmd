---
title: "Redesign Project"
---

Welcome to my redesign project, where I present two original visualizations and two redesigns for each. Navigate easily using the buttons below.

## Navigation

<button class="btn-custom">

`<a href="#`{=html}Music Streaming Services Comparison`" style="color: inherit; text-decoration: none;">`{=html}Music Streaming Services Comparison</a>

</button>

<button class="btn-custom">

`<a href="#`{=html}Global Literacy Rates`" style="color: inherit; text-decoration: none;">`{=html}Global Literacy Rates</a>

</button>

<button class="btn-custom">

<a href="#concluding-remarks" style="color: inherit; text-decoration: none;">Concluding Remarks</a>

</button>

------------------------------------------------------------------------

## Music Streaming Services Comparison {#original-visualization-1}

![](images/Music.png)

*Source:* [information is beautiful](https://informationisbeautiful.net/visualizations/spotify-apple-music-tidal-music-streaming-services-royalty-rates-compared/)

::: card
<h3>Analysis of Music Streaming Services Comparison</h3>

<p>This graph compares various major music streaming services, focusing on metrics like average artist revenue per play, total users, percentage of free users, and estimated annual loss. While the intent is clear—highlighting the disparities in how different services pay artists—the visualization presents several issues.</p>

<ul>

<li><strong>Issue 1</strong>: The original graph had overlapping lines that created visual clutter, making it difficult to distinguish between the different streaming services.</li>

<li><strong>Issue 2</strong>: The inconsistent use of colors made it hard to track and compare key metrics like revenue per play and total users, leading to confusion in interpreting the data.</li>

</ul>
:::

### Redesign 1

```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
# Load necessary libraries
library(readr)       # For reading CSV files
library(dplyr)       # For data manipulation
library(janitor)     # For cleaning column names
library(ggplot2)     # For visualizations
library(ggrepel)     # For better text labels in plots
library(plotly)      # For interactive plots
library(ggiraph)     # For interactive ggplot elements

# Load the dataset (replace "path_to_your_file.csv" with the actual file path)
file_path <- "C:\\Users\\karti\\OneDrive\\Desktop\\Music Streaming Services.csv"
df <- read_csv(file_path, show_col_types = FALSE)

# Clean column names
df <- df %>% janitor::clean_names()

# Data cleaning
df_clean <- df %>%
  mutate(
    price_per_stream = as.numeric(gsub("[^0-9\\.]", "", average_price_paid_per_stream)),
    total_users = as.numeric(gsub("[^0-9\\.]", "", total_users_millions)),
    indie_label_revenue = as.numeric(gsub("[^0-9\\.]", "", artist_on_indie_label_receives_per_play_2016)),
    market_share = as.numeric(gsub("[^0-9\\.]", "", market_share))
  ) %>%
  filter(
    !is.na(streaming_service) & 
    !is.na(price_per_stream) & 
    !is.na(total_users) & 
    !is.na(market_share)
  )

# Check cleaned data
head(df_clean)
```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
# Create an interactive bar chart using ggplot and plotly
p1 <- ggplot(df_clean, aes(x = reorder(streaming_service, price_per_stream), y = price_per_stream, fill = streaming_service)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  scale_fill_brewer(palette = "Set3") +
  labs(
    title = "Average Price Paid per Stream by Streaming Service",
    x = "Streaming Service",
    y = "Price Paid per Stream ($)"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 14),
    legend.position = "none"
  )

# Convert ggplot to an interactive plotly plot
p1_interactive <- ggplotly(p1)
p1_interactive
```

**Discussion**: Here we Simplified the original cluttered design with overlapping lines by using a bar chart.We Used consistent colours and Plotly to make the chart interactive, allowing users to hover over each bar for detailed values.

### Redesign 2

```{r, echo=FALSE, message=FALSE, warning=FALSE}
# Further Improved Interactive Bubble Chart
library(ggplot2)
library(plotly)
library(ggrepel)

# Improved Bubble Chart with Interactive Tooltips and Better Color
p4 <- ggplot(df_clean, aes(x = total_users, y = indie_label_revenue, size = market_share, color = streaming_service, label = streaming_service)) +
  geom_point(alpha = 0.7) +
  scale_size_continuous(range = c(5, 15), guide = guide_legend(title = "Market Share (%)")) +
  scale_color_viridis_d() +
  geom_text_repel(aes(label = streaming_service), size = 3, color = "black", max.overlaps = 10) +
  labs(
    title = "Total Users vs. Indie Label Revenue",
    x = "Total Users (Millions)",
    y = "Indie Label Revenue ($ per play)",
    size = "Market Share (%)",
    color = "Streaming Service"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 14),
    legend.position = "right"
  )

# Convert to an interactive plotly plot
p4_interactive <- ggplotly(p4, tooltip = c("label", "x", "y", "size"))
p4_interactive
```

**Discussion**:Enhanced the clarity by replacing tangled lines with a bubble chart.We Added interactive features with Plotly, enabling users to hover over bubbles to see total users and revenue details.

------------------------------------------------------------------------

## Global Literacy Rates {#original-visualization-2}

![](images/Literacy%20rates.png){width="15.2cm"}

*Source:* [beautiful news daily](https://informationisbeautiful.net/beautifulnews/86-literacy-rates-equal/)

::: card
<h3>Analysis of Global Literacy Rates</h3>

<p>This graph compares global literacy rates between females and males from 1976 to 2017. The key takeaway is that literacy rates for both genders have increased, with female literacy rising from 61% to 83% and male literacy dropping slightly from 90% to 77%, showing a narrowing gap between the two.</p>

<ul>

<li><strong>Issue 1</strong>: The graph didn’t clearly show how the gap between male and female literacy rates was closing, making it harder to compare their progress.</li>

<li><strong>Issue 2</strong>: he lack of overlapping lines made it difficult to see how female literacy rates were improving relative to male literacy rates.</li>

</ul>
:::

### Redesign 1

```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)

# Load the dataset
file_path <- "C:\\Users\\karti\\OneDrive\\Desktop\\Female and Male Literacy Rates.csv" # Update with the correct path
df <- read_csv(file_path)

# Rename columns for easier reference
df_clean <- df %>%
  rename(
    year = year,  # Assuming the column is named "Year"
    female_literacy = `global adult female literacy rate (%)`,
    male_literacy = `global adult male literacy rate (%)`
  ) %>%
  filter(!is.na(female_literacy) & !is.na(male_literacy)) %>%
  mutate(year = as.numeric(year))

# Reshape data for easy plotting
df_long <- df_clean %>%
  pivot_longer(cols = c(female_literacy, male_literacy),
               names_to = "gender", values_to = "literacy_rate") %>%
  mutate(gender = case_when(
    gender == "female_literacy" ~ "Female",
    gender == "male_literacy" ~ "Male"
  ))
```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
# Line chart visualization
line_plot <- ggplot(df_long, aes(x = year, y = literacy_rate, color = gender, group = gender)) +
  geom_line(size = 1.2) +  # Use a thicker line for better visibility
  geom_point(size = 3, alpha = 0.7) +  # Add points to highlight key data points
  labs(
    title = "Literacy Rates by Gender (1976 to 2017)",
    x = "Year",
    y = "Literacy Rate (%)",
    color = "Gender"
  ) +
  scale_color_manual(values = c("Female" = "purple", "Male" = "orange")) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 12, face = "bold"),
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 14),
    legend.position = "top"
  )

# Convert ggplot to interactive plotly plot
interactive_line_plot <- ggplotly(line_plot)

# Print the interactive plot
interactive_line_plot


```

**Discussion**: We Focused on emphasizing the gender gap in literacy rates.We Used Plotly’s interactive capabilities to let users explore specific data points for male and female literacy rates over time.

### Redesign 2

```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
# Load necessary libraries
library(ggplot2)   # For plotting
library(dplyr)     # For data manipulation
library(tidyr)     # For reshaping data
library(plotly)



# Load the dataset
file_path <- "C:\\Users\\karti\\OneDrive\\Desktop\\Female and Male Literacy Rates.csv"
df <- read_csv(file_path)



# Rename columns for easier use
colnames(df) <- c("Year", "Female_Literacy", "Male_Literacy", "Extra_Column")

# Remove any unnecessary columns
df <- df %>% select(Year, Female_Literacy, Male_Literacy)

# Reshape data into long format
df_long <- df %>%
  pivot_longer(cols = c(Female_Literacy, Male_Literacy), 
               names_to = "Gender", 
               values_to = "Literacy_Rate")
```

```{r, echo=FALSE, message=FALSE, warning=FALSE}

# Create an enhanced interactive area plot using plotly
interactive_plot <- plot_ly(df_long, x = ~Year, y = ~Literacy_Rate, color = ~Gender, type = 'scatter', mode = 'lines+markers',
                            fill = 'tozeroy', text = ~paste("Year:", Year, "<br>Literacy Rate:", Literacy_Rate, "%"),
                            hoverinfo = 'text') %>%
  layout(
    title = list(
      text = "Global Literacy Rates by Gender (1976 to 2017)",
      x = 0.5,  # Center the title
      y = 0.95,  # Adjust the title position slightly lower to avoid overlap
      font = list(size = 20)  # Increase the title font size
    ),
    xaxis = list(title = "Year"),
    yaxis = list(title = "Literacy Rate (%)"),
    hovermode = 'closest',
    legend = list(
      title = list(text = "Gender"),
      x = 1.05,  # Move legend further right, outside the plot
      y = 0.5,  # Center the legend vertically
      font = list(size = 12)
    ),
    
    # Adjust margins to prevent overlap with legend and dropdown
    margin = list(l = 50, r = 150, t = 100, b = 50),  # Increase right margin for legend
    
    # Adding a dropdown for color options
    updatemenus = list(
      list(
        buttons = list(
          list(method = "restyle",
               args = list("line.color", list("blue", "orange")),
               label = "Blue & Orange"),
          list(method = "restyle",
               args = list("line.color", list("red", "green")),
               label = "Red & Green"),
          list(method = "restyle",
               args = list("line.color", list("purple", "yellow")),
               label = "Purple & Yellow")
        ),
        direction = "down",
        x = 0.8, y = 1.15,  # Move dropdown menu further above the plot
        xanchor = "right",  # Align the dropdown to the right
        showactive = TRUE
      )
    )
  ) %>%
  config(displayModeBar = TRUE)  # Enable the toolbar for more interactivity

# Display the interactive plot
interactive_plot


```

**Discussion**: We Improved trend comparison by combining male and female data.We added interactive features using Plotly, allowing users to hover over the chart for specific year-by-year literacy rate comparisons.

------------------------------------------------------------------------

## Conclusion {#concluding-remarks}

::: card
<p>Through the redesign of the original visualizations, we have enhanced the overall clarity, interpretability, and engagement of the data. By simplifying the layouts, using consistent colours, and removing unnecessary visual clutter, the comparisons between different variables are now much clearer. Furthermore, by integrating interactive features using Plotly, we have allowed users to explore the data more deeply and interactively. These changes make the visualizations more effective in conveying the key messages while ensuring a more engaging user experience.</p>
:::

------------------------------------------------------------------------

## References

-   Music Streaming Services Comparison: Dr Stephanie Starling, Miriam Quick, 2018, [See the Source](https://informationisbeautiful.net/visualizations/spotify-apple-music-tidal-music-streaming-services-royalty-rates-compared/)
-   Global Literacy Rates: Johan Norberg, 2016, [See the Source](#)
-   Tools: R, ggplot2, dplyr, plotly, ggiraph, ggrepel
